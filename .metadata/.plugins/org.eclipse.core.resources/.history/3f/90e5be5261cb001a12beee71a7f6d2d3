package graphs;

import java.util.Iterator;
import java.util.LinkedList;

class Graph {
	private int V;
	private LinkedList<Integer>[] adj;

	Graph(final int v) {
		this.V = v;
		adj = new LinkedList[v];
		for (int i = 0; i < v; i++) {
			adj[v] = new LinkedList<>();
		}
	}

	public void addEdge(int v, int w) {
		if (adj != null) {
			adj[v].add(w);
		}
	}

	public void DFSUtil(int v, boolean[] visited) {
		visited[v] = true;
		System.out.println(v);

		Iterator<Integer> i = adj[v].listIterator();
		while (i.hasNext()) {
			int n = i.next();
			if (!visited[n]) {
				DFSUtil(n, visited);
			}
		}
	}

}

public class GraphTraversal {

}
